{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/TextArea/TextArea.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","name","onChange","valid","onBlur","htmlFor","id","placeholder","event","target","value","required","TextArea","NewMovie","state","field","isValid","isButtonDisabled","onChangeFields","fieldName","content","setState","prevState","onAdd","preventDefault","props","addMovie","reset","fieldValidation","Boolean","test","Object","values","every","onSubmit","this","disabled","type","Component","App","moviesFromServer","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb2bf88e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Input.scss';\n\nexport const Input = ({ name, onChange, valid, onBlur }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"form-label\">\n        {name}\n      </label>\n      <input\n        className={`form-input ${valid ? '' : 'form-input-error'}`}\n        name={name}\n        id={name}\n        placeholder={`${name === 'imdbUrl'\n          || name === 'imgUrl' ? 'https://www.example.com' : `${name}`}`}\n        onChange={event => onChange(event.target.name, event.target.value)}\n        onBlur={event => onBlur(event.target.name, event.target.value)}\n        required\n      />\n      <span\n        className={`error-message ${valid ? '' : 'error-message-visible'}`}\n      >\n        {name === 'imdbUrl'\n          || name === 'imgUrl' ? 'Invalid url' : 'Empty field'}\n      </span>\n    </div>\n  );\n};\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  valid: PropTypes.bool.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TextArea = ({ name, onChange }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name} className=\"form-label\">\n        {name}\n      </label>\n      <textarea\n        className=\"form-input\"\n        name={name}\n        id={name}\n        onBlur={event => onChange(event)}\n      />\n    </div>\n  );\n};\n\nTextArea.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport { Input } from '../Input/Input';\nimport { TextArea } from '../TextArea/TextArea';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    field: {\n      title: {\n        isValid: true,\n      },\n      imgUrl: {\n        isValid: true,\n      },\n      imdbUrl: {\n        isValid: true,\n      },\n      imdbId: {\n        isValid: true,\n      },\n    },\n    isButtonDisabled: false,\n  };\n\n  onChangeFields = (fieldName, content) => {\n    this.setState(prevState => ({\n      movie: {\n        ...prevState.movie,\n        [fieldName]: content,\n      },\n    }));\n  }\n\n  onAdd = (event) => {\n    event.preventDefault();\n\n    const movie = { ...this.state.movie };\n\n    this.props.addMovie(movie);\n\n    event.target.reset();\n  };\n\n  fieldValidation = (fieldName, content) => {\n    // eslint-disable-next-line max-len\n    const patternUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    const isValid = (fieldName === 'title' || fieldName === 'imdbId')\n      ? Boolean(content)\n      : patternUrl.test(content);\n\n    this.setState(prevState => ({\n      field: {\n        ...prevState.field,\n        [fieldName]: {\n          isValid,\n        },\n      },\n    }));\n\n    this.setState(prevState => ({\n      isButtonDisabled: !Object.values(prevState.field)\n        .every(field => field.isValid),\n    }));\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        name=\"movie\"\n        onSubmit={this.onAdd}\n      >\n        <Input\n          name=\"title\"\n          onChange={this.onChangeFields}\n          onBlur={this.fieldValidation}\n          valid={this.state.field.title.isValid}\n        />\n        <TextArea\n          name=\"description\"\n          onChange={this.onChangeFields}\n        />\n        <Input\n          name=\"imgUrl\"\n          onChange={this.onChangeFields}\n          onBlur={this.fieldValidation}\n          valid={this.state.field.imgUrl.isValid}\n        />\n        <Input\n          name=\"imdbUrl\"\n          onChange={this.onChangeFields}\n          onBlur={this.fieldValidation}\n          valid={this.state.field.imdbUrl.isValid}\n        />\n        <Input\n          name=\"imdbId\"\n          onChange={this.onChangeFields}\n          onBlur={this.fieldValidation}\n          valid={this.state.field.imdbId.isValid}\n        />\n        <button\n          disabled={this.state.isButtonDisabled}\n          className=\"btn\"\n          type=\"submit\"\n        >\n          AddMovie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => prevState.movies.push(movie));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}